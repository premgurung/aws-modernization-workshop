---
AWSTemplateFormatVersion: '2010-09-09'
Description: AWS Modernization Workshop - Continuous Integration & Continuous Delivery
  (CICD) (20180825). This AWS CloudFormation template will provision AWS CodeCommit,
  AWS CodePipeline, AWS CodeBuild and AWS CodeDeploy for Blue/Green deployment on
  ECS.
Metadata:
  LICENSE: |-
    Copyright 2017 Amazon Web Services
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: AWS CodeCommit Configuration
      Parameters:
      - PetsRepo
    - Label:
        default: AWS CodePipeline Configuration
      Parameters:
      - CodePipelineName
    ParameterLabels:
      PetsRepo:
        default: Repository Name
      CodePipelineName:
        default: Pipeline Name
Parameters:
  CodePipelineName:
    Description: Desired name for your CodePipeline.
    Type: String
    Default: petstore
  PetsRepo:
    Description: Desired name for your repository.
    Type: String
    Default: aws_pet_store_repo
Resources:
  PetsRepository:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName:
        Ref: PetsRepo
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: petstore-cicd-codebuild-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:PutObject
            Resource: '*'
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: '*'
          - Effect: Allow
            Action:
            - ecr:DescribeRepositories
            - ecr:GetDownloadUrlForLayer
            - ecr:BatchGetImage
            - ecr:BatchCheckLayerAvailability
            - ecr:PutImage
            - ecr:InitiateLayerUpload
            - ecr:UploadLayerPart
            - ecr:CompleteLayerUpload
            - ecr:GetAuthorizationToken
            Resource: '*'
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: petstore-cicd-pipeline-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:GetBucketVersioning
            Resource: '*'
          - Effect: Allow
            Action:
            - codecommit:CancelUploadArchive
            - codecommit:GetBranch
            - codecommit:GetCommit
            - codecommit:GetUploadArchiveStatus
            - codecommit:UploadArchive
            Resource: '*'
          - Effect: Allow
            Action:
            - codedeploy:CreateDeployment
            - codedeploy:GetApplicationRevision
            - codedeploy:GetDeployment
            - codedeploy:GetDeploymentConfig
            - codedeploy:RegisterApplicationRevision
            Resource: '*'
          - Effect: Allow
            Action:
            - elasticbeanstalk:*
            - ec2:*
            - elasticloadbalancing:*
            - autoscaling:*
            - cloudwatch:*
            - s3:*
            - sns:*
            - cloudformation:*
            - rds:*
            - sqs:*
            - ecs:*
            - iam:PassRole
            Resource: '*'
          - Effect: Allow
            Action:
            - lambda:InvokeFunction
            - lambda:ListFunctions
            Resource: '*'
          - Effect: Allow
            Action:
            - cloudformation:CreateStack
            - cloudformation:DeleteStack
            - cloudformation:DescribeStacks
            - cloudformation:UpdateStack
            - cloudformation:CreateChangeSet
            - cloudformation:DeleteChangeSet
            - cloudformation:DescribeChangeSet
            - cloudformation:ExecuteChangeSet
            - cloudformation:SetStackPolicy
            - cloudformation:ValidateTemplate
            - iam:PassRole
            Resource: '*'
          - Effect: Allow
            Action:
            - codebuild:BatchGetBuilds
            - codebuild:StartBuild
            Resource: '*'
  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: petstore-modernize-workshop
      RoleArn:
        Fn::GetAtt: CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location:
          Ref: ArtifactBucket
      Stages:
      - Name: Source
        Actions:
        - Name: Source
          ActionTypeId:
            Category: Source
            Owner: AWS
            Version: 1
            Provider: CodeCommit
          OutputArtifacts:
          - Name: petstore-src
          Configuration:
            BranchName: master
            PollForSourceChanges: true
            RepositoryName:
              Fn::GetAtt: PetsRepository.Name
          RunOrder: 1
      - Name: Build
        Actions:
        - Name: Build
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: 1
            Provider: CodeBuild
          Configuration:
            ProjectName:
              Ref: CodeBuildProject
          InputArtifacts:
          - Name: petstore-src
          OutputArtifacts:
          - Name: petstore-build
          RunOrder: 1
      - Name: Deploy
        Actions:
        - Name: Deploy
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Version: 1
            Provider: ECS
          Configuration:
            ClusterName: petstore-workshop
            FileName: imagedefinitions.json
            ServiceName: petstore
          InputArtifacts:
          - Name: petstore-build
          RunOrder: 1
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: ${AWS::StackName}-petstore
      Description: Build of jPetstore Application
      Artifacts:
        Type: CODEPIPELINE
        Name: petstore-modernizer-build-container
        Packaging: NONE
      Source:
        Type: CODEPIPELINE
        InsecureSsl: false       
      Environment:
        ComputeType: BUILD_GENERAL1_LARGE
        Image: aws/codebuild/docker:17.09.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
        - Name: AWS_DEFAULT_REGION
          Value:
            Ref: AWS::Region
        - Name: REPO_URI
          Value:
            Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/petstore_frontend
        - Name: AWS_ACCOUNT
          Value:
            Ref: AWS::AccountId
      ServiceRole:
        Ref: CodeBuildServiceRole
Outputs:
  PetsRepo:
    Description: Clone URL for AWS CodeCommit Pet Store Repository
    Value:
      Fn::GetAtt: PetsRepository.CloneUrlHttp
...
