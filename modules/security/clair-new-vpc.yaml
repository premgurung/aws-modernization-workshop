---
AWSTemplateFormatVersion: '2010-09-09'
Description: AWS Modernization Workshop - AWS Modernization Workshop - CloudFormation template for Clair scanning tool running on Fargete. This AWS CloudFormation
  template will set up an AWS Fargate Cluster and deploy Clair as a container and RDS instance.
Metadata:
  LICENSE: |-
    Copyright 2017 Amazon Web Services
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: AWS Fargate Configuration
      Parameters:
      - ClusterName
    ParameterLabels:
      ClusterName:
        default: Cluster
Parameters:
  ClusterName:
    Description: Desired name for your cluster.
    Type: String
    Default: Clair
  ClairDBPassword:
    Description: The initial Clair RDS Password.
    NoEcho: true
    Type: String
    Default: Passw0rd
  ClairImage:
    Default: 'jasonumiker/clair:latest'
    Description: The Clair container image to deploy.
    Type: String
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.195.0.0/16
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: InternetGateway
      VpcId:
        Ref: VPC
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs: ''
      CidrBlock: 10.195.1.0/24
      MapPublicIpOnLaunch: true
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone:
        Fn::Select:
        - 1
        - Fn::GetAZs: ''
      CidrBlock: 10.195.2.0/24
      MapPublicIpOnLaunch: true
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet1
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet2
  FargateTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ecs-tasks.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
  ClairSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: ClairSG
      GroupDescription: Security Group for Clair on Fargate
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 6060
        ToPort: 6061
        CidrIp: 0.0.0.0/0
      VpcId:
        Ref: VPC      
  FargateCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: Clair
  ClairDB:
    Properties:
      AllocatedStorage: '20'
      DBInstanceClass: db.t2.micro
      DBName: postgres
      DBSubnetGroupName: !Ref DBSubnetGroup
      Engine: postgres
      EngineVersion: 9.6.8
      MasterUserPassword: !Ref ClairDBPassword
      MasterUsername: postgres
      MultiAZ: 'false'
      StorageType: gp2
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
    Type: 'AWS::RDS::DBInstance'
  DBSecurityGroup:
    Properties:
      GroupDescription: Security group for RDS DB Instance.
      SecurityGroupIngress:
        - FromPort: '5432'
          IpProtocol: tcp
          SourceSecurityGroupId: !GetAtt 
            - ClairSecurityGroup
            - GroupId
          ToPort: '5432'
      VpcId: !Ref VPC
    Type: 'AWS::EC2::SecurityGroup'
  DBSubnetGroup:
    Properties:
      DBSubnetGroupDescription: Subnets available for the RDS DB Instance
      SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
    Type: 'AWS::RDS::DBSubnetGroup'
  ClairLogGroup:
    Type: 'AWS::Logs::LogGroup'
  ClairService:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: FargateCluster
      ServiceName: Clair
      LaunchType: FARGATE
      DesiredCount: 1
      TaskDefinition:
        Ref: ClairTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
          - Ref: ClairSecurityGroup
          Subnets:
          - Ref: PublicSubnet1
          - Ref: PublicSubnet2
  ClairTaskDefinition:
    Properties:
      ContainerDefinitions:
        - Environment:
            - Name: DB_HOST
              Value: !GetAtt 
                - ClairDB
                - Endpoint.Address
            - Name: DB_PASSWORD
              Value: !Ref ClairDBPassword
          Essential: 'true'
          Image: !Ref ClairImage
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ClairLogGroup
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: clair
          Name: clair
          PortMappings:
            - ContainerPort: 6061
            - ContainerPort: 6060
              Protocol: tcp
      Cpu: '512'
      Memory: 1GB
      NetworkMode: awsvpc
      RequiresCompatibilities:
      - FARGATE
      ExecutionRoleArn:
        Fn::GetAtt: FargateTaskRole.Arn      
    Type: 'AWS::ECS::TaskDefinition'

